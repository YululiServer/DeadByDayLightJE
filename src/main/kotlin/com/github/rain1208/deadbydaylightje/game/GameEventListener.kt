package com.github.rain1208.deadbydaylightje.gameimport com.github.rain1208.deadbydaylightje.DeadByDayLightJEimport com.github.rain1208.deadbydaylightje.animate.ThrowAxeimport org.bukkit.Bukkitimport org.bukkit.Materialimport org.bukkit.entity.ArmorStandimport org.bukkit.event.EventHandlerimport org.bukkit.event.Listenerimport org.bukkit.event.entity.EntityDamageByEntityEventimport org.bukkit.event.player.PlayerDropItemEventimport org.bukkit.event.player.PlayerJoinEventimport org.bukkit.event.player.PlayerQuitEventimport org.bukkit.inventory.ItemStackimport org.bukkit.scheduler.BukkitRunnableclass GameEventListener(game: Game): Listener {    @EventHandler    fun onDropItem(event: PlayerDropItemEvent) {        if (event.itemDrop.itemStack.type == Material.IRON_AXE) {            val stand = event.player.world.spawn(event.player.location.add(event.player.location.direction), ArmorStand::class.java)            stand.isVisible = false            stand.setGravity(false)            stand.setArms(true)            stand.equipment?.itemInMainHand = ItemStack(Material.IRON_AXE)            stand.rightArmPose.z = 330.0            event.itemDrop.remove()            val axe = event.player.inventory.itemInMainHand            event.player.inventory.remove(axe)            val instance = DeadByDayLightJE.instance            val animate = ThrowAxe(stand)            animate.runTaskTimer(instance,0,1)            object : BukkitRunnable() {                override fun run() {                    if (!animate.isCancelled) Bukkit.getScheduler().cancelTask(animate.taskId)                    if(!stand.isDead) stand.remove()                    event.player.inventory.addItem(axe)                }            }.runTaskLater(instance,200)        }    }    @EventHandler    fun onJoin(event: PlayerJoinEvent) {        TODO("ゲーム開始後のjoinイベント")    }    @EventHandler    fun onLeave(event: PlayerQuitEvent) {        TODO("途中退出")    }    @EventHandler    fun damageByEntity(event: EntityDamageByEntityEvent) {    }}